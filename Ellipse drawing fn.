//Ellipse drawing Fn.

float X, Y; //Center point.

void plot(int x, int y)  //Plots the points.
{    
  glPointSize(2.5);
	glBegin(GL_POINTS);
	glVertex2f(x+X, y+Y);
	glEnd();
}

void QuadsDraw(int x, int y) //Draws for each quadrant.
{
        plot(x, y);
		plot(x, -y);
		plot(-x, y);
		plot(-x, -y);
}

void midPointEllAlgo(int a,int b) //Ellipse algorithm. a - major axis, b - minor axis and center.
{
	int x = 0;
	int y = b;
    double sa = sqrt(a);
    double sb = sqrt(b);

    double d1 = sb - sa*b + 0.25*sa;

    QuadsDraw(x,y);

    while( sa*(y - 0.5) > sb*( x+1 )) //R1
    {
        if( d1 < 0 )    //Selects E.
            d1 += sb*( ( x << 1 ) + 3 );
        else   //Selects SE.
        {
            d1 += sb*(( x << 1 ) + 3 ) + sa*(-( y << 1 ) + 2 );
            y--;
        }
        x++;
        QuadsDraw(x,y);
    }

    double d2 = sb*sqrt( x + 0.5 ) + sa*sqrt( y - 1 ) - sa*sb;

    while( y > 0) //R2
    {
        if( d2 < 0 ) //Selects SE.
        {
            d2 += sb*(( x<<1 ) + 2) + sa*(-( y<<1 ) + 3);
            x++;
        }
        else   //Selects S.
            d2 += sa*(-( y<<1 ) + 3);
        y--;
        QuadsDraw(x,y);
    }
}
